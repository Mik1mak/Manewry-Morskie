@implements IDisposable
@inject GameService Game

<MyBSModal Id="instruction-modal" Header="Zasady gry">
    <Content>
        <GameInstruction/>
    </Content>
</MyBSModal>
<MyBSModal Id="table-modal" Header="Jednostki">
    <Content>
        <UnitsPowerTable/>
    </Content>
</MyBSModal>
<MyBSModal Id="destroyed-units-modal" Header="Stracone Jednostki">
    <Content>
        <DestroyedUnits Source="destroyedUnits"/>
    </Content>
</MyBSModal>
<OnlineGameModal />

<BSNavbar Color="BSColor.Dark" IsDark="true">
    <form class="container-fluid flex-row justify-content-between">
        <BSNavbarBrand MarginLeftAndRight="Margins.ExtraSmall" Class="d-none d-md-inline">Manewry Morskie</BSNavbarBrand>
        <BSNav Class="d-flex flex-row">
            <BSNavItem IsDropdown="true">
                <BSButtonGroup>
                    <BSDropdown IsDiv="true" Class="dropdown-menu-dark">
                        <Toggler>
                            <BSToggle IsButton="true" IsOutlined="true" Color="BSColor.Light" MarginLeftAndRight="Margins.Small">
                                <span class="oi oi-media-play"></span>
                                <span class="d-none d-md-inline">  Nowa Gra</span>
                            </BSToggle>
                        </Toggler>
                        <Content>
                            <BSDropdownItem @onclick="async () => await StartLocalGame()">Hot Seat</BSDropdownItem>
                            <BSDropdownItem Attributes='ToggleAtributes("#online-game-modal")'>Online</BSDropdownItem>
                        </Content>
                    </BSDropdown>
                </BSButtonGroup>
            </BSNavItem> 
            <BSNavItem IsDropdown="true">
                <BSButtonGroup>
                    <BSDropdown IsDiv="true" Class="dropdown-menu-dark">
                        <Toggler>
                            <BSToggle IsButton="true" IsOutlined="true" Color="BSColor.Light" MarginLeftAndRight="Margins.Small">
                                <span class="oi oi-info"></span>
                                <span class="d-none d-md-inline">  Rozgrywka</span>
                            </BSToggle>
                        </Toggler>
                        <Content>
                            <BSDropdownItem Attributes='ToggleAtributes("#instruction-modal")'>Zasady gry</BSDropdownItem>
                            <BSDropdownItem Attributes='ToggleAtributes("#table-modal")'>Tabela jednostek</BSDropdownItem>
                            <BSDropdownItem IsDisabled="!isGameOngoing"
                                @onclick="async () => destroyedUnits = await Game.DestroyedUnits()"
                                Attributes='ToggleAtributes("#destroyed-units-modal")'>
                                Stracone jednostki
                            </BSDropdownItem>
                        </Content>
                    </BSDropdown>
                </BSButtonGroup>
            </BSNavItem>
            <BoardTransformTools />
        </BSNav>
    </form>
</BSNavbar>

@code 
{
    private bool isGameOngoing = false;
    private Dictionary<string, int[]>? destroyedUnits;

    protected override void OnInitialized()
    {
        Game.GameStarted += GameStarted;
        Game.GameClosed += GameStopped;
    }

    private Dictionary<string, object> ToggleAtributes(string dataBsTargetValue)
    {
        return new() { { "data-bs-toggle", "modal" }, { "data-bs-target", dataBsTargetValue } };
    }

    private async ValueTask StartLocalGame()
    {
        await Game.SetUpLocal();
        await Game.RunGame();
    }

    private async Task GameStarted() => await SetOngoing(true);

    private async Task GameStopped(string? msg) => await SetOngoing(false);

    private async ValueTask SetOngoing(bool val) => await InvokeAsync(() => { isGameOngoing = val; StateHasChanged(); });

    public void Dispose()
    {
        Game.GameStarted -= GameStarted;
        Game.GameClosed -= GameStopped;
    }
}
