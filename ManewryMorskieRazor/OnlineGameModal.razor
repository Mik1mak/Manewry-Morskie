@using System.ComponentModel.DataAnnotations
@using Attributes = Dictionary<string, object>

@inject DialogService DialogService
@inject GameService Game
@inject BootstrapInterop Bootstrap

<div class="modal" tabindex="-1" id="online-game-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Gra Online</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" title="Zamknij"></button>
            </div>
            <EditForm Model="onlineModal">
                <div class="modal-body">
                    <div class="mb-3 @(onlineModal.RandomRoom?"text-muted":"")">
                        <label class="form-label">Nazwa Pokoju</label>
                        <InputText 
                            DisplayName="Nazwa Pokoju" @bind-Value="onlineModal.RoomName"
                            AdditionalAttributes='onlineModal.RandomRoom?disabledTxtInputAtrs:txtInputAtrs' />
                    </div>
                    <div class="mb-3">
                        <InputCheckbox DisplayName="Losowy Pokój"
                            AdditionalAttributes='new Attributes {{"class","form-check-input"},
                                {"title","Losowy Pokój"},{"id","random-room"}}'
                            @bind-Value="onlineModal.RandomRoom"/>
                        <label class="form-check-label" for="random-room">Losowy Pokój</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" 
                        @onclick="async () => await StartOnline(true)">Stwórz</button>
                    <button type="button" class="btn btn-primary" 
                        @onclick="async () => await StartOnline(false)">Dołącz</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code 
{
    private static readonly Attributes txtInputAtrs = new()
    {
        {"maxlength","16"},
        {"placeholder","Nazwa Pokoju"},
        {"title","Nazwa Pokoju"},
        {"class","form-control"},
    };

    private static readonly Attributes disabledTxtInputAtrs = new(txtInputAtrs)
    {
        ["disabled"]=string.Empty,
    };

    private async ValueTask StartOnline(bool createRoom)
    {
        await Bootstrap.ToogleModal("online-game-modal", false);
        await Game.SetUpOnline(createRoom, onlineModal.RoomName, onlineModal.RandomRoom);

        if (createRoom)
            await DialogService.DisplaySplashScreen(new("Oczekiwanie na przeciwnika... Kliknij, aby anulować", true));
        else
            await DialogService.DisplaySplashScreen(new("Łączenie...", false));

        await Game.RunGame();
    }

    private OnlineGameFormModel onlineModal = new();

    private class OnlineGameFormModel
    {
        public string? RoomName { get; set; }

        public bool RandomRoom { get; set; } = true;
    }
}
