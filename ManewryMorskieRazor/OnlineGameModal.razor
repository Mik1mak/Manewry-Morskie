@using System.ComponentModel.DataAnnotations
@using Attributes = Dictionary<string, object>

@inject DialogService DialogService
@inject GameService Game
@inject BootstrapInterop Bootstrap

<div class="modal" tabindex="-1" id="online-game-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Gra Online</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <BSForm Model="onlineModal">
                <div class="modal-body">
                    @*<BSValidationSummary />*@
                    <div class="mb-3 @(onlineModal.RandomRoom?"text-muted":"")">
                        <BSLabel>Nazwa Pokoju</BSLabel>
                        <BSInput DisplayName="Nazwa Pokoju" @bind-Value="onlineModal.RoomName"
                                 IsDisabled="onlineModal.RandomRoom"
                                 AdditionalAttributes='new Attributes {{"maxlength", "16"}}'/>
                    </div>
                    <div class="mb-3">
                        <InputCheckbox 
                            DisplayName="Losowy Pokój"
                            AdditionalAttributes='new Attributes {{"class", "form-check-input"}}'
                            @bind-Value="onlineModal.RandomRoom"/>
                        <BSLabel>Losowy Pokój</BSLabel>
                    </div>
                </div>
                <div class="modal-footer">
                    <BSButton Color="BSColor.Secondary" @onclick="async () => await StartOnline(true)">Stwórz</BSButton>
                    <BSButton Color="BSColor.Primary" @onclick="async () => await StartOnline(false)">Dołącz</BSButton>
                </div>
            </BSForm>
        </div>
    </div>
</div>

@code 
{
    private async ValueTask StartOnline(bool createRoom)
    {
        await Bootstrap.ToogleModal("online-game-modal", false);
        await Game.SetUpOnline(createRoom, onlineModal.RoomName, onlineModal.RandomRoom);

        if (createRoom)
            await DialogService.DisplaySplashScreen(new("Oczekiwanie na przeciwnika...", false));
        else
            await DialogService.DisplaySplashScreen(new("Łączenie...", false));

        await Game.RunGame();
    }

    private OnlineGameFormModel onlineModal = new();

    private class OnlineGameFormModel
    {
        public string? RoomName { get; set; }

        public bool RandomRoom { get; set; } = true;
    }
}
